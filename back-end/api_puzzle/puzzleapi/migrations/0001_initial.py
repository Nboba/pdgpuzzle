# Generated by Django 5.1.5 on 2025-01-18 00:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataPetition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('height', models.IntegerField()),
                ('nWidth', models.IntegerField()),
                ('expantionFactor', models.FloatField()),
                ('enemyFactor', models.FloatField()),
                ('blockFactor', models.FloatField()),
                ('nPop', models.IntegerField()),
                ('mutationFactor', models.FloatField()),
                ('maxIter', models.IntegerField()),
                ('maxMoves', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DungeonData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dungeon', models.JSONField()),
                ('nSol', models.IntegerField()),
                ('minSol', models.IntegerField()),
                ('solution', models.JSONField()),
                ('solutionPlayer', models.JSONField(default={})),
                ('recordTime', models.TimeField(default='00:00:00')),
                ('recordMoves', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PetitionManager',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('statusP', models.CharField(choices=[('P', 'pending'), ('C', 'completed')], default='P')),
                ('dungeonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzleapi.dungeondata')),
                ('petitionData', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzleapi.datapetition')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
